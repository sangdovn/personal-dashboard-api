name: Deploy Personal Dashboard API Dev

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:

env:
  APP_NAME: ${{ vars.APP_NAME }}
  APP_VERSION: ${{ vars.APP_VERSION }}
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  DOCKER_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ vars.APP_NAME }}:${{ github.ref_name }}-${{ vars.APP_VERSION }}
  HOST_PORT: 8001
  CONTAINER_PORT: 8000
  CONTAINER_NAME: ${{ vars.APP_NAME }}-${{ github.ref_name }}-${{ vars.APP_VERSION }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
  SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin

      - name: Build Docker image
        run: docker build --no-cache -t $DOCKER_IMAGE .

      - name: Push Docker image
        run: docker push $DOCKER_IMAGE

      - name: Logout from Docker Hub
        run: docker logout

      - name: Clean up
        run: docker system prune -a -f

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: development

    steps:
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            DOCKER_IMAGE="${{ secrets.DOCKER_HUB_USERNAME }}/${{ vars.APP_NAME }}:${{ github.ref_name }}-${{ vars.APP_VERSION }}"
            CONTAINER_NAME="${{ vars.APP_NAME }}-${{ github.ref_name }}-${{ vars.APP_VERSION }}"
            HOST_PORT=8001
            CONTAINER_PORT=8000

            docker pull $DOCKER_IMAGE
            docker stop $CONTAINER_NAME
            docker rm $CONTAINER_NAME
            docker rmi $DOCKER_IMAGE
            docker run -d --restart always --name $CONTAINER_NAME -p $HOST_PORT:$CONTAINER_PORT $DOCKER_IMAGE
