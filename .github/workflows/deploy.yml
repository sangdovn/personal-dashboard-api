name: Personal Dashboard Backend

on:
  push:
    branches:
      - ["master"]
  pull_request:
    branches:
      - ["master"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
      - name: Build Docker image
        run: |
          docker build -t "${{ secrets.DOCKER_HUB_USERNAME }}/${{ vars.APP_NAME }}:latest" .
      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
      - name: Push Docker image
        run: |
          docker push "${{ secrets.DOCKER_HUB_USERNAME }}/${{ vars.APP_NAME }}:latest"
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
            docker pull "${{ secrets.DOCKER_HUB_USERNAME }}/${{ vars.APP_NAME }}:latest"
            docker stop ${{ vars.APP_NAME }} || true
            docker rm ${{ vars.APP_NAME }} || true
            docker rmi "${{ secrets.DOCKER_HUB_USERNAME }}/${{ vars.APP_NAME }}:latest" || true
            docker run -d --restart always --name ${{ vars.APP_NAME }} -p ${{ vars.HOST_PORT }}:${{ vars.CONTAINER_PORT }} ${{ vars.APP_NAME }}:latest
